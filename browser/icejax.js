!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var f;"undefined"!=typeof window?f=window:"undefined"!=typeof global?f=global:"undefined"!=typeof self&&(f=self),f.icejax=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
// Generated by IcedCoffeeScript 1.7.1-f
(function() {
  var param, parse, xhr,
    __slice = [].slice;

  parse = function(req) {
    var e, res;
    try {
      res = JSON.parse(req.responseText);
    } catch (_error) {
      e = _error;
      res = req.responseText;
    }
    return res;
  };

  xhr = function(type, url, data, cb) {
    var XHR, req;
    XHR = XMLHttpRequest || ActiveXObject;
    req = new XHR('MSXML2.XMLHTTP.3.0');
    req.open(type, url, true);
    req.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
    req.onreadystatechange = function() {
      if (req.readyState === 4) {
        if (req.status === 200) {
          return cb(null, parse(req));
        } else {
          return cb(parse(req), null);
        }
      }
    };
    return req.send(data);
  };

  param = function(o) {

    /*
    converts a basic object dict into serialized form for GET calls
     */
    var euc, k, s, v;
    s = [];
    euc = encodeURIComponent;
    for (k in o) {
      v = o[k];
      s.push("" + (euc(k)) + "=" + (euc(v)));
    }
    return s.join('&').replace(/%20/g, '+');
  };

  exports.get = function() {
    var args, cb, src;
    src = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];

    /*
    either get(url, dict, cb)
    or     get(url, cb)
     */
    cb = args[args.length - 1];
    if (args.length > 1) {
      src += src.indexOf('?') !== -1 ? '&' : '?';
      src += param(args[0]);
    }
    return xhr('GET', src, null, cb);
  };

  exports.put = function(url, data, cb) {
    return xhr('PUT', url, data, cb);
  };

  exports.post = function(url, data, cb) {
    return xhr('POST', url, data, cb);
  };

  exports["delete"] = function(src, cb) {
    return xhr('DELETE', src, null, cb);
  };

}).call(this);

},{}],2:[function(require,module,exports){
// Generated by IcedCoffeeScript 1.7.1-f
(function() {
  var icejax, k, v;

  icejax = require('./icejax');

  for (k in icejax) {
    v = icejax[k];
    exports[k] = v;
  }

}).call(this);

},{"./icejax":1}]},{},[2])(2)
});